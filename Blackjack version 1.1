// Goal is to create a Blackjack program that allows a user to play against a CPU 


//STEP 1 = create deck of cards and player + dealer hands
var cardDeck = [2,3,4,5,6,7,8,9,10,2,3,4,5,6,7,8,9,10, 2,3,4,5,6,7,8,9,10, 2,3,4,5,6,7,8,9,10, 'K','Q','J','A', 'K','Q','J','A', 'K','Q','J','A', 'K','Q','J','A'];
//you want 52 things in this array for 52 cards
//then create 2 empty arrays 
//one for the dealer and one for the player.
//from there you need to figure you how to 


//STEP 2- deal the cards
//STEP 3- tally up scores
//STEP 4 - see who wins

//from here you would start the process all over again (hint: what would allow you to start this process over again without having to code it all through)


//Create an array 0-12 
var cardValues = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];

//Create another array for the suits (Diamond, Hearts, Clubs, Spades)
//var cardSuit = [Diamond, Heart, Club, Spade];

//Create an empty array to store cards that have already been pulled
var alreadyUsedCards = [];
              
//Create a randomized value from the initial array of cards (b/w 0-12) 
var randomCard = floor(random(0, 12));

//Put first card value (first random number generated) into this empty array




// Need an array that holds all 52 cards 
var cardDeck = []; //Face cards: Jack Queen King Ace

//array that holds all chips for the player
var playerChips = [];


// constructor function for cards 
var Cards = function(setup) 
{
    this.x = setup.x || 0;
    this.y = setup.y || 0;
    this.width = setup.width || 150;
    this.height = setup.height || 50;
    this.suit = setup.suit || 0;
    this.value = setup.value || 0;
};


Cards.prototype.draw = function(input){
    if (input === red){
   
    }
};


//constructors function for chips
var Chips = function(input) 
{
    this.x = input.x || 0;
    this.y = input.y || 0;
    this.width = input.width || 150;
    this.height = input.height || 50;
    this.monetaryValue = input.monetaryValue || 0;

    this.color = input.color || 0;
};


//Create start screen for Blackjack game - scene creation
//Title text - print out the words: BlackJack  in a good looking font  

var currentScene = 0;

/* Copy in the Khan Button class */
var Button = function(config) 
{
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};

Button.prototype.draw = function() 
{
    stroke(0, 0, 0);
    fill(81, 247, 69);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    //textAlign(LEFT, TOP);
    text(this.label, this.x+27, this.y+this.height/1.5);
};

Button.prototype.isMouseInside = function() 
{
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

Button.prototype.handleMouseClick = function() 
{
    if (this.isMouseInside()) 
    {
        this.onClick();
    }
};

var startButton = new Button 
({
    x: 128,
    y: 234,
    label: "Start Game",
    onClick: function() {
        currentScene = 2;
    }
});

var instrucButton = new Button 
({
    x: 128,
    y: 296,
    label: "Instructions",
    onClick: function() {
        currentScene = 1;
    }
});

var backButton = new Button 
({
    x: 128,
    y: 296,
    label: "     Back",
    onClick: function() {
        currentScene = 0;
    }
});


//Create a logo image for blackjack (a few cards and a poker chip)
var splashScreen = function () 
{
background(255, 255, 255);
strokeWeight(2);
stroke(0, 0, 0);

//Red Chip 5$
fill(255, 0, 0);
ellipse(69, 100, 61, 60);
ellipse(69, 100, 41, 40);
fill(255, 255, 255);
rect(61, 70, 10, 10);
rect(64, 120, 10, 10);
rect(90, 94, 10, 10);
fill(255, 255, 255);
textSize(25);
text("5$", 58, 108);

//Blue Chip 15$
fill(0, 68, 255);
ellipse(285, 99, 61, 60);
ellipse(285, 99, 41, 40);
fill(255, 255, 255);
rect(279, 69, 10, 10);
rect(254, 94, 10, 10);
rect(281, 119, 10, 10);
fill(255, 255, 255);
text("15$", 265, 109);


//Purple Chip 10$
fill(207, 48, 255);
ellipse(40, 117, 61, 60);
ellipse(40, 117, 41, 40);
fill(255, 255, 255);
rect(33, 87, 10, 10);
rect(59, 110, 10, 10);
rect(33, 136, 10, 10);
rect(9, 110, 10, 10);
fill(255, 255, 255);
text("10$", 18, 127);


//Green Chip 20$
fill(0, 199, 93);
ellipse(321, 121, 61, 60);
ellipse(321, 121, 41, 40);
fill(255, 255, 255);
text("20$", 301, 131);
rect(292, 117, 10, 10);
rect(342, 117, 10, 10);
rect(317, 141, 10, 10);
rect(317, 91, 10, 10);



//Cards 
strokeWeight(4);
fill(255, 255, 255);
rect(103, 4, 89, 125, 20);
fill(0, 0, 0);
text("10", 108, 34);
fill(255, 250, 250);
rect(131, 13, 89, 125, 20);
fill(255, 0, 0);
text("10", 136, 40);

fill(255, 255, 255);
rect(154, 23, 89, 125, 20);
fill(255, 0, 0);
text("A", 161, 51);
text("A", 217, 135);
stroke(247, 84, 84);
triangle(189, 85, 196, 69, 203, 85);
triangle(189, 86, 196, 100, 203, 87);

strokeWeight(1);
fill(255, 173, 173);
rect(10, 153, 349, 68, 0);
fill(0, 0, 0);
textSize(30);
text("Welcome to: ", 23, 186);
fill(0, 0, 0);
textSize(32);

textSize(30);
fill(255, 0, 0);
text("Blackjack!", 200, 185);
textSize(16);

text("(Also known as Twenty-One)", 78, 211);
fill(0, 0, 0);

startButton.draw();
instrucButton.draw();

};



//Add game instructions  - (Add a button that when clicked brings up a screen that shows how to play Blackjack)
var gameRule = function () 
{
background(255, 255, 255);
textSize(19);
text("RULES: ", 165, 229-170);
textSize(12);
text("To begin, each player is dealt two cards (from a normal deck of 52).", 5, 257-170);
text("All cards have a value of 1-10. (Face cards worth 10). Ace can be 1 or 11.", 5, 280-170);
text("The goal is for the total of the cards to be as close to 21 as possible.", 5, 300-170);
text("If the total of the cards is exactly 21 you win", 5, 320-170);
text("If the total of the cards goes over 21 you lose", 5, 340-170);
text("If there is a tie, the hand will continue until there is a winner ", 5, 360-170);
text("Betting increments are set at 5$, 10$, 15$, and 20$ chips.", 5, 381-170);

backButton.draw();

};


//Create the start button for the game that sends the user into a game screen
var playGame = function () 
{
background(255, 255, 255);
strokeWeight(10);
stroke(139,69,19);
fill(111,195,145);
rect(8, 7, 384, 387, 18);
strokeWeight(2);
stroke(255, 255, 255);
fill(111,195,145);
rect(231, 17, 84, 109, 20);
strokeWeight(2);
stroke(255, 255, 255);
fill(111,195,145);
rect(44, 273, 84, 109, 20);
fill(255, 255, 255);
text("Dealer", 247, 147);
text("Player", 61, 262);



};

mouseClicked = function() {
    if (currentScene === 0)
    {
        instrucButton.handleMouseClick();
        startButton.handleMouseClick();
    }
    else if (currentScene === 1)
    {
        backButton.handleMouseClick();
    }
};


var draw = function() {
    if (currentScene === 0)
    {
        splashScreen();
    }
    else if (currentScene === 1)
    {
        gameRule();
    }
    else if (currentScene === 2)
    {
        playGame();
    }
};

 //The rules are simple, the play is thrilling, and there is opportunity for high strategy. In fact, for the expert player who mathematically plays a perfect game and is able to count cards, the odds are sometimes in that player's favor to win.



//Make an array - create an array called "cardDeck" array that will hold the 52 cards in a standard deck 
